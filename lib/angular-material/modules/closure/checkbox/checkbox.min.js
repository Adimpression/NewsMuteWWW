goog.provide("ngmaterial.components.checkbox");goog.require("ngmaterial.core");MdCheckboxDirective.$inject=["inputDirective","$mdAria","$mdConstant","$mdTheming","$mdUtil","$timeout"];angular.module("material.components.checkbox",["material.core"]).directive("mdCheckbox",MdCheckboxDirective);function MdCheckboxDirective(inputDirective,$mdAria,$mdConstant,$mdTheming,$mdUtil,$timeout){inputDirective=inputDirective[0];return{restrict:"E",transclude:true,require:"?ngModel",priority:210,template:'<div class="md-container" md-ink-ripple md-ink-ripple-checkbox>'+'<div class="md-icon"></div>'+"</div>"+'<div ng-transclude class="md-label"></div>',compile:compile};function compile(tElement,tAttrs){tAttrs.$set("tabindex",tAttrs.tabindex||"0");tAttrs.$set("type","checkbox");tAttrs.$set("role",tAttrs.type);return{pre:function(scope,element){element.on("click",function(e){if(this.hasAttribute("disabled")){e.stopImmediatePropagation()}})},post:postLink};function postLink(scope,element,attr,ngModelCtrl){var isIndeterminate;ngModelCtrl=ngModelCtrl||$mdUtil.fakeNgModel();$mdTheming(element);element.children().on("focus",function(){element.focus()});if($mdUtil.parseAttributeBoolean(attr.mdIndeterminate)){setIndeterminateState();scope.$watch(attr.mdIndeterminate,setIndeterminateState)}if(attr.ngChecked){scope.$watch(scope.$eval.bind(scope,attr.ngChecked),function(value){ngModelCtrl.$setViewValue(value);ngModelCtrl.$render()})}$$watchExpr("ngDisabled","tabindex",{"true":"-1","false":attr.tabindex});$mdAria.expectWithText(element,"aria-label");inputDirective.link.pre(scope,{on:angular.noop,0:{}},attr,[ngModelCtrl]);scope.mouseActive=false;element.on("click",listener).on("keypress",keypressHandler).on("mousedown",function(){scope.mouseActive=true;$timeout(function(){scope.mouseActive=false},100)}).on("focus",function(){if(scope.mouseActive===false){element.addClass("md-focused")}}).on("blur",function(){element.removeClass("md-focused")});ngModelCtrl.$render=render;function $$watchExpr(expr,htmlAttr,valueOpts){if(attr[expr]){scope.$watch(attr[expr],function(val){if(valueOpts[val]){element.attr(htmlAttr,valueOpts[val])}})}}function keypressHandler(ev){var keyCode=ev.which||ev.keyCode;if(keyCode===$mdConstant.KEY_CODE.SPACE||keyCode===$mdConstant.KEY_CODE.ENTER){ev.preventDefault();element.addClass("md-focused");listener(ev)}}function listener(ev){if(element[0].hasAttribute("disabled")||scope.skipToggle){return}scope.$apply(function(){var viewValue=attr.ngChecked?attr.checked:!ngModelCtrl.$viewValue;ngModelCtrl.$setViewValue(viewValue,ev&&ev.type);ngModelCtrl.$render()})}function render(){element.toggleClass("md-checked",!!ngModelCtrl.$viewValue&&!isIndeterminate)}function setIndeterminateState(newValue){isIndeterminate=newValue!==false;if(isIndeterminate){element.attr("aria-checked","mixed")}element.toggleClass("md-indeterminate",isIndeterminate)}}}}ngmaterial.components.checkbox=angular.module("material.components.checkbox");