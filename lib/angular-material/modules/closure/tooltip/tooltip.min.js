goog.provide("ngmaterial.components.tooltip");goog.require("ngmaterial.core");MdTooltipDirective.$inject=["$timeout","$window","$$rAF","$document","$mdUtil","$mdTheming","$rootElement","$animate","$q","$interpolate"];angular.module("material.components.tooltip",["material.core"]).directive("mdTooltip",MdTooltipDirective);function MdTooltipDirective($timeout,$window,$$rAF,$document,$mdUtil,$mdTheming,$rootElement,$animate,$q,$interpolate){var ENTER_EVENTS="focus touchstart mouseenter";var LEAVE_EVENTS="blur touchcancel mouseleave";var SHOW_CLASS="md-show";var TOOLTIP_SHOW_DELAY=0;var TOOLTIP_WINDOW_EDGE_SPACE=8;return{restrict:"E",transclude:true,priority:210,template:'<div class="md-content _md" ng-transclude></div>',scope:{delay:"=?mdDelay",visible:"=?mdVisible",autohide:"=?mdAutohide",direction:"@?mdDirection"},compile:function(tElement,tAttr){if(!tAttr.mdDirection){tAttr.$set("mdDirection","bottom")}return postLink}};function postLink(scope,element,attr){$mdTheming(element);var parent=$mdUtil.getParentWithPointerEvents(element),content=angular.element(element[0].getElementsByClassName("md-content")[0]),tooltipParent=angular.element(document.body),showTimeout=null,debouncedOnResize=$$rAF.throttle(function(){updatePosition()});if($animate.pin)$animate.pin(element,parent);setDefaults();manipulateElement();bindEvents();updateContentOrigin();configureWatchers();addAriaLabel();function setDefaults(){scope.delay=scope.delay||TOOLTIP_SHOW_DELAY}function updateContentOrigin(){var origin="center top";switch(scope.direction){case"left":origin="right center";break;case"right":origin="left center";break;case"top":origin="center bottom";break;case"bottom":origin="center top";break}content.css("transform-origin",origin)}function onVisibleChanged(isVisible){if(isVisible)showTooltip();else hideTooltip()}function configureWatchers(){if(element[0]&&"MutationObserver"in $window){var attributeObserver=new MutationObserver(function(mutations){mutations.forEach(function(mutation){if(mutation.attributeName==="md-visible"){if(!scope.visibleWatcher)scope.visibleWatcher=scope.$watch("visible",onVisibleChanged)}if(mutation.attributeName==="md-direction"){updatePosition(scope.direction)}})});attributeObserver.observe(element[0],{attributes:true});if(attr.hasOwnProperty("mdVisible")){scope.visibleWatcher=scope.$watch("visible",onVisibleChanged)}}else{scope.visibleWatcher=scope.$watch("visible",onVisibleChanged);scope.$watch("direction",updatePosition)}var onElementDestroy=function(){scope.$destroy()};element.one("$destroy",onElementDestroy);parent.one("$destroy",onElementDestroy);scope.$on("$destroy",function(){setVisible(false);element.remove();attributeObserver&&attributeObserver.disconnect()});if(element.text().indexOf($interpolate.startSymbol())>-1){scope.$watch(function(){return element.text().trim()},addAriaLabel)}}function addAriaLabel(override){if((override||!parent.attr("aria-label"))&&!parent.text().trim()){var rawText=override||element.text().trim();var interpolatedText=$interpolate(rawText)(parent.scope());parent.attr("aria-label",interpolatedText)}}function manipulateElement(){element.detach();element.attr("role","tooltip")}function bindEvents(){var mouseActive=false;if(parent[0]&&"MutationObserver"in $window){var attributeObserver=new MutationObserver(function(mutations){if(mutations.some(function(mutation){return mutation.attributeName==="disabled"&&parent[0].disabled})){$mdUtil.nextTick(function(){setVisible(false)})}});attributeObserver.observe(parent[0],{attributes:true})}var windowBlurHandler=function(){elementFocusedOnWindowBlur=document.activeElement===parent[0]};var elementFocusedOnWindowBlur=false;function windowScrollHandler(){setVisible(false)}angular.element($window).on("blur",windowBlurHandler).on("resize",debouncedOnResize);document.addEventListener("scroll",windowScrollHandler,true);scope.$on("$destroy",function(){angular.element($window).off("blur",windowBlurHandler).off("resize",debouncedOnResize);parent.off(ENTER_EVENTS,enterHandler).off(LEAVE_EVENTS,leaveHandler).off("mousedown",mousedownHandler);leaveHandler();document.removeEventListener("scroll",windowScrollHandler,true);attributeObserver&&attributeObserver.disconnect()});var enterHandler=function(e){if(e.type==="focus"&&elementFocusedOnWindowBlur){elementFocusedOnWindowBlur=false}else if(!scope.visible){parent.on(LEAVE_EVENTS,leaveHandler);setVisible(true);if(e.type==="touchstart"){parent.one("touchend",function(){$mdUtil.nextTick(function(){$document.one("touchend",leaveHandler)},false)})}}};var leaveHandler=function(){var autohide=scope.hasOwnProperty("autohide")?scope.autohide:attr.hasOwnProperty("mdAutohide");if(autohide||mouseActive||$document[0].activeElement!==parent[0]){if(showTimeout){$timeout.cancel(showTimeout);setVisible.queued=false;showTimeout=null}parent.off(LEAVE_EVENTS,leaveHandler);parent.triggerHandler("blur");setVisible(false)}mouseActive=false};var mousedownHandler=function(){mouseActive=true};parent.on("mousedown",mousedownHandler);parent.on(ENTER_EVENTS,enterHandler)}function setVisible(value){if(setVisible.queued&&setVisible.value===!!value||!setVisible.queued&&scope.visible===!!value)return;setVisible.value=!!value;if(!setVisible.queued){if(value){setVisible.queued=true;showTimeout=$timeout(function(){scope.visible=setVisible.value;setVisible.queued=false;showTimeout=null;if(!scope.visibleWatcher){onVisibleChanged(scope.visible)}},scope.delay)}else{$mdUtil.nextTick(function(){scope.visible=false;if(!scope.visibleWatcher)onVisibleChanged(false)})}}}function showTooltip(){if(!element[0].textContent.trim())return;element.css({top:0,left:0});tooltipParent.append(element);if($mdUtil.hasComputedStyle(element,"display","none")){scope.visible=false;element.detach();return}updatePosition();$animate.addClass(content,SHOW_CLASS).then(function(){element.addClass(SHOW_CLASS)})}function hideTooltip(){$animate.removeClass(content,SHOW_CLASS).then(function(){element.removeClass(SHOW_CLASS);if(!scope.visible)element.detach()})}function updatePosition(){if(!scope.visible)return;updateContentOrigin();positionTooltip()}function positionTooltip(){var tipRect=$mdUtil.offsetRect(element,tooltipParent);var parentRect=$mdUtil.offsetRect(parent,tooltipParent);var newPosition=getPosition(scope.direction);var offsetParent=element.prop("offsetParent");if(scope.direction){newPosition=fitInParent(newPosition)}else if(offsetParent&&newPosition.top>offsetParent.scrollHeight-tipRect.height-TOOLTIP_WINDOW_EDGE_SPACE){newPosition=fitInParent(getPosition("top"))}element.css({left:newPosition.left+"px",top:newPosition.top+"px"});function fitInParent(pos){var newPosition={left:pos.left,top:pos.top};newPosition.left=Math.min(newPosition.left,tooltipParent.prop("scrollWidth")-tipRect.width-TOOLTIP_WINDOW_EDGE_SPACE);newPosition.left=Math.max(newPosition.left,TOOLTIP_WINDOW_EDGE_SPACE);newPosition.top=Math.min(newPosition.top,tooltipParent.prop("scrollHeight")-tipRect.height-TOOLTIP_WINDOW_EDGE_SPACE);newPosition.top=Math.max(newPosition.top,TOOLTIP_WINDOW_EDGE_SPACE);return newPosition}function getPosition(dir){return dir==="left"?{left:parentRect.left-tipRect.width-TOOLTIP_WINDOW_EDGE_SPACE,top:parentRect.top+parentRect.height/2-tipRect.height/2}:dir==="right"?{left:parentRect.left+parentRect.width+TOOLTIP_WINDOW_EDGE_SPACE,top:parentRect.top+parentRect.height/2-tipRect.height/2}:dir==="top"?{left:parentRect.left+parentRect.width/2-tipRect.width/2,top:parentRect.top-tipRect.height-TOOLTIP_WINDOW_EDGE_SPACE}:{left:parentRect.left+parentRect.width/2-tipRect.width/2,top:parentRect.top+parentRect.height+TOOLTIP_WINDOW_EDGE_SPACE}}}}}ngmaterial.components.tooltip=angular.module("material.components.tooltip");