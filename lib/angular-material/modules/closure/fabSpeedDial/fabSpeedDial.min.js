goog.provide("ngmaterial.components.fabShared");goog.require("ngmaterial.core");(function(){"use strict";MdFabController.$inject=["$scope","$element","$animate","$mdUtil","$mdConstant","$timeout"];angular.module("material.components.fabShared",["material.core"]).controller("MdFabController",MdFabController);function MdFabController($scope,$element,$animate,$mdUtil,$mdConstant,$timeout){var vm=this;vm.open=function(){$scope.$evalAsync("vm.isOpen = true")};vm.close=function(){$scope.$evalAsync("vm.isOpen = false");$element.find("md-fab-trigger")[0].focus()};vm.toggle=function(){$scope.$evalAsync("vm.isOpen = !vm.isOpen")};setupDefaults();setupListeners();setupWatchers();var initialAnimationAttempts=0;fireInitialAnimations();function setupDefaults(){vm.direction=vm.direction||"down";vm.isOpen=vm.isOpen||false;resetActionIndex();$element.addClass("md-animations-waiting")}function setupListeners(){var eventTypes=["click","focusin","focusout"];angular.forEach(eventTypes,function(eventType){$element.on(eventType,parseEvents)});$scope.$on("$destroy",function(){angular.forEach(eventTypes,function(eventType){$element.off(eventType,parseEvents)});disableKeyboard()})}var closeTimeout;function parseEvents(event){if(event.type=="click"){handleItemClick(event)}if(event.type=="focusout"&&!closeTimeout){closeTimeout=$timeout(function(){vm.close()},100,false)}if(event.type=="focusin"&&closeTimeout){$timeout.cancel(closeTimeout);closeTimeout=null}}function resetActionIndex(){vm.currentActionIndex=-1}function setupWatchers(){$scope.$watch("vm.direction",function(newDir,oldDir){$animate.removeClass($element,"md-"+oldDir);$animate.addClass($element,"md-"+newDir);resetActionIndex()});var trigger,actions;$scope.$watch("vm.isOpen",function(isOpen){resetActionIndex();if(!trigger||!actions){trigger=getTriggerElement();actions=getActionsElement()}if(isOpen){enableKeyboard()}else{disableKeyboard()}var toAdd=isOpen?"md-is-open":"";var toRemove=isOpen?"":"md-is-open";trigger.attr("aria-haspopup",true);trigger.attr("aria-expanded",isOpen);actions.attr("aria-hidden",!isOpen);$animate.setClass($element,toAdd,toRemove)})}function fireInitialAnimations(){if($element[0].scrollHeight>0){$animate.addClass($element,"_md-animations-ready").then(function(){$element.removeClass("md-animations-waiting")})}else if(initialAnimationAttempts<10){$timeout(fireInitialAnimations,100);initialAnimationAttempts=initialAnimationAttempts+1}}function enableKeyboard(){$element.on("keydown",keyPressed);$mdUtil.nextTick(function(){angular.element(document).on("click touchend",checkForOutsideClick)})}function disableKeyboard(){$element.off("keydown",keyPressed);angular.element(document).off("click touchend",checkForOutsideClick)}function checkForOutsideClick(event){if(event.target){var closestTrigger=$mdUtil.getClosest(event.target,"md-fab-trigger");var closestActions=$mdUtil.getClosest(event.target,"md-fab-actions");if(!closestTrigger&&!closestActions){vm.close()}}}function keyPressed(event){switch(event.which){case $mdConstant.KEY_CODE.ESCAPE:vm.close();event.preventDefault();return false;case $mdConstant.KEY_CODE.LEFT_ARROW:doKeyLeft(event);return false;case $mdConstant.KEY_CODE.UP_ARROW:doKeyUp(event);return false;case $mdConstant.KEY_CODE.RIGHT_ARROW:doKeyRight(event);return false;case $mdConstant.KEY_CODE.DOWN_ARROW:doKeyDown(event);return false}}function doActionPrev(event){focusAction(event,-1)}function doActionNext(event){focusAction(event,1)}function focusAction(event,direction){var actions=resetActionTabIndexes();vm.currentActionIndex=vm.currentActionIndex+direction;vm.currentActionIndex=Math.min(actions.length-1,vm.currentActionIndex);vm.currentActionIndex=Math.max(0,vm.currentActionIndex);var focusElement=angular.element(actions[vm.currentActionIndex]).children()[0];angular.element(focusElement).attr("tabindex",0);focusElement.focus();event.preventDefault();event.stopImmediatePropagation()}function resetActionTabIndexes(){var actions=getActionsElement()[0].querySelectorAll(".md-fab-action-item");angular.forEach(actions,function(action){angular.element(angular.element(action).children()[0]).attr("tabindex",-1)});return actions}function doKeyLeft(event){if(vm.direction==="left"){doActionNext(event)}else{doActionPrev(event)}}function doKeyUp(event){if(vm.direction==="down"){doActionPrev(event)}else{doActionNext(event)}}function doKeyRight(event){if(vm.direction==="left"){doActionPrev(event)}else{doActionNext(event)}}function doKeyDown(event){if(vm.direction==="up"){doActionPrev(event)}else{doActionNext(event)}}function isTrigger(element){return $mdUtil.getClosest(element,"md-fab-trigger")}function isAction(element){return $mdUtil.getClosest(element,"md-fab-actions")}function handleItemClick(event){if(isTrigger(event.target)){vm.toggle()}if(isAction(event.target)){vm.close()}}function getTriggerElement(){return $element.find("md-fab-trigger")}function getActionsElement(){return $element.find("md-fab-actions")}}})();(function(){"use strict";MdFabSpeedDialFlingAnimation.$inject=["$timeout"];MdFabSpeedDialScaleAnimation.$inject=["$timeout"];var cssAnimationDuration=300;angular.module("material.components.fabSpeedDial",["material.core","material.components.fabShared","material.components.fabActions"]).directive("mdFabSpeedDial",MdFabSpeedDialDirective).animation(".md-fling",MdFabSpeedDialFlingAnimation).animation(".md-scale",MdFabSpeedDialScaleAnimation).service("mdFabSpeedDialFlingAnimation",MdFabSpeedDialFlingAnimation).service("mdFabSpeedDialScaleAnimation",MdFabSpeedDialScaleAnimation);function MdFabSpeedDialDirective(){return{restrict:"E",scope:{direction:"@?mdDirection",isOpen:"=?mdOpen"},bindToController:true,controller:"MdFabController",controllerAs:"vm",link:FabSpeedDialLink};function FabSpeedDialLink(scope,element){element.prepend('<div class="_md-css-variables"></div>')}}function MdFabSpeedDialFlingAnimation($timeout){function delayDone(done){$timeout(done,cssAnimationDuration,false)}function runAnimation(element){if(element.hasClass("md-animations-waiting")&&!element.hasClass("_md-animations-ready")){return}var el=element[0];var ctrl=element.controller("mdFabSpeedDial");var items=el.querySelectorAll(".md-fab-action-item");var triggerElement=el.querySelector("md-fab-trigger");var variablesElement=el.querySelector("._md-css-variables");var startZIndex=parseInt(window.getComputedStyle(variablesElement).zIndex);angular.forEach(items,function(item,index){var styles=item.style;styles.transform=styles.webkitTransform="";styles.transitionDelay="";styles.opacity=1;styles.zIndex=items.length-index+startZIndex});triggerElement.style.zIndex=startZIndex+items.length+1;if(!ctrl.isOpen){angular.forEach(items,function(item,index){var newPosition,axis;var styles=item.style;var triggerItemHeightOffset=(triggerElement.clientHeight-item.clientHeight)/2;var triggerItemWidthOffset=(triggerElement.clientWidth-item.clientWidth)/2;switch(ctrl.direction){case"up":newPosition=item.scrollHeight*(index+1)+triggerItemHeightOffset;axis="Y";break;case"down":newPosition=-(item.scrollHeight*(index+1)+triggerItemHeightOffset);axis="Y";break;case"left":newPosition=item.scrollWidth*(index+1)+triggerItemWidthOffset;axis="X";break;case"right":newPosition=-(item.scrollWidth*(index+1)+triggerItemWidthOffset);axis="X";break}var newTranslate="translate"+axis+"("+newPosition+"px)";styles.transform=styles.webkitTransform=newTranslate})}}return{addClass:function(element,className,done){if(element.hasClass("md-fling")){runAnimation(element);delayDone(done)}else{done()}},removeClass:function(element,className,done){runAnimation(element);delayDone(done)}}}function MdFabSpeedDialScaleAnimation($timeout){function delayDone(done){$timeout(done,cssAnimationDuration,false)}var delay=65;function runAnimation(element){var el=element[0];var ctrl=element.controller("mdFabSpeedDial");var items=el.querySelectorAll(".md-fab-action-item");var variablesElement=el.querySelector("._md-css-variables");var startZIndex=parseInt(window.getComputedStyle(variablesElement).zIndex);angular.forEach(items,function(item,index){var styles=item.style,offsetDelay=index*delay;styles.opacity=ctrl.isOpen?1:0;styles.transform=styles.webkitTransform=ctrl.isOpen?"scale(1)":"scale(0)";styles.transitionDelay=(ctrl.isOpen?offsetDelay:items.length-offsetDelay)+"ms";styles.zIndex=items.length-index+startZIndex})}return{addClass:function(element,className,done){runAnimation(element);delayDone(done)},removeClass:function(element,className,done){runAnimation(element);delayDone(done)}}}})();ngmaterial.components.fabShared=angular.module("material.components.fabShared");