goog.provide("ngmaterial.components.colors");goog.require("ngmaterial.core");(function(){"use strict";MdColorsDirective.$inject=["$mdColors","$mdUtil","$log","$parse"];MdColorsService.$inject=["$mdTheming","$mdUtil","$log"];var STATIC_COLOR_EXPRESSION=/^{((\s|,)*?["'a-zA-Z-]+?\s*?:\s*?('|")[a-zA-Z0-9-.]*('|"))+\s*}$/;var colorPalettes=null;angular.module("material.components.colors",["material.core"]).directive("mdColors",MdColorsDirective).service("$mdColors",MdColorsService);function MdColorsService($mdTheming,$mdUtil,$log){colorPalettes=colorPalettes||Object.keys($mdTheming.PALETTES);return{applyThemeColors:applyThemeColors,getThemeColor:getThemeColor,hasTheme:hasTheme};function applyThemeColors(element,colorExpression){try{if(colorExpression){element.css(interpolateColors(colorExpression))}}catch(e){$log.error(e.message)}}function getThemeColor(expression){var color=extractColorOptions(expression);return parseColor(color)}function parseColor(color,contrast){contrast=contrast||false;var rgbValues=$mdTheming.PALETTES[color.palette][color.hue];rgbValues=contrast?rgbValues.contrast:rgbValues.value;return $mdUtil.supplant("rgba({0}, {1}, {2}, {3})",[rgbValues[0],rgbValues[1],rgbValues[2],rgbValues[3]||color.opacity])}function interpolateColors(themeColors){var rgbColors={};var hasColorProperty=themeColors.hasOwnProperty("color");angular.forEach(themeColors,function(value,key){var color=extractColorOptions(value);var hasBackground=key.indexOf("background")>-1;rgbColors[key]=parseColor(color);if(hasBackground&&!hasColorProperty){rgbColors.color=parseColor(color,true)}});return rgbColors}function hasTheme(expression){return angular.isDefined($mdTheming.THEMES[expression.split("-")[0]])}function extractColorOptions(expression){var parts=expression.split("-");var hasTheme=angular.isDefined($mdTheming.THEMES[parts[0]]);var theme=hasTheme?parts.splice(0,1)[0]:$mdTheming.defaultTheme();return{theme:theme,palette:extractPalette(parts,theme),hue:extractHue(parts,theme),opacity:parts[2]||1}}function extractPalette(parts,theme){var isTwoWord=parts.length>1&&colorPalettes.indexOf(parts[1])!==-1;var palette=parts[0].replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();if(isTwoWord)palette=parts[0]+"-"+parts.splice(1,1);if(colorPalettes.indexOf(palette)===-1){var scheme=$mdTheming.THEMES[theme].colors[palette];if(!scheme){throw new Error($mdUtil.supplant("mdColors: couldn't find '{palette}' in the palettes.",{palette:palette}))}palette=scheme.name}return palette}function extractHue(parts,theme){var themeColors=$mdTheming.THEMES[theme].colors;if(parts[1]==="hue"){var hueNumber=parseInt(parts.splice(2,1)[0],10);if(hueNumber<1||hueNumber>3){throw new Error($mdUtil.supplant("mdColors: 'hue-{hueNumber}' is not a valid hue, can be only 'hue-1', 'hue-2' and 'hue-3'",{hueNumber:hueNumber}))}parts[1]="hue-"+hueNumber;if(!(parts[0]in themeColors)){throw new Error($mdUtil.supplant("mdColors: 'hue-x' can only be used with [{availableThemes}], but was used with '{usedTheme}'",{availableThemes:Object.keys(themeColors).join(", "),usedTheme:parts[0]}))}return themeColors[parts[0]].hues[parts[1]]}return parts[1]||themeColors[parts[0]in themeColors?parts[0]:"primary"].hues["default"]}}function MdColorsDirective($mdColors,$mdUtil,$log,$parse){return{restrict:"A",require:["^?mdTheme"],compile:function(tElem,tAttrs){var shouldWatch=shouldColorsWatch();return function(scope,element,attrs,ctrl){var mdThemeController=ctrl[0];var lastColors={};var parseColors=function(theme){if(typeof theme!=="string"){theme=""}if(!attrs.mdColors){attrs.mdColors="{}"}var colors=$parse(attrs.mdColors)(scope);if(mdThemeController){Object.keys(colors).forEach(function(prop){var color=colors[prop];if(!$mdColors.hasTheme(color)){colors[prop]=(theme||mdThemeController.$mdTheme)+"-"+color}})}cleanElement(colors);return colors};var cleanElement=function(colors){if(!angular.equals(colors,lastColors)){var keys=Object.keys(lastColors);if(lastColors.background&&!keys.color){keys.push("color")}keys.forEach(function(key){element.css(key,"")})}lastColors=colors};var unregisterChanges=angular.noop;if(mdThemeController){unregisterChanges=mdThemeController.registerChanges(function(theme){$mdColors.applyThemeColors(element,parseColors(theme))})}scope.$on("$destroy",function(){unregisterChanges()});try{if(shouldWatch){scope.$watch(parseColors,angular.bind(this,$mdColors.applyThemeColors,element),true)}else{$mdColors.applyThemeColors(element,parseColors())}}catch(e){$log.error(e.message)}};function shouldColorsWatch(){var rawColorExpression=tAttrs.mdColors;var bindOnce=rawColorExpression.indexOf("::")>-1;var isStatic=bindOnce?true:STATIC_COLOR_EXPRESSION.test(tAttrs.mdColors);tAttrs.mdColors=rawColorExpression.replace("::","");var hasWatchAttr=angular.isDefined(tAttrs.mdColorsWatch);return bindOnce||isStatic?false:hasWatchAttr?$mdUtil.parseAttributeBoolean(tAttrs.mdColorsWatch):true}}}}})();ngmaterial.components.colors=angular.module("material.components.colors");