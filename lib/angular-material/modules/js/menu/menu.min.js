(function(window,angular,undefined){"use strict";angular.module("material.components.menu",["material.core","material.components.backdrop"]);MenuController.$inject=["$mdMenu","$attrs","$element","$scope","$mdUtil","$timeout","$rootScope","$q"];angular.module("material.components.menu").controller("mdMenuCtrl",MenuController);function MenuController($mdMenu,$attrs,$element,$scope,$mdUtil,$timeout,$rootScope,$q){var prefixer=$mdUtil.prefixer();var menuContainer;var self=this;var triggerElement;this.nestLevel=parseInt($attrs.mdNestLevel,10)||0;this.init=function init(setMenuContainer,opts){opts=opts||{};menuContainer=setMenuContainer;triggerElement=$element[0].querySelector(prefixer.buildSelector(["ng-click","ng-mouseenter"]));triggerElement.setAttribute("aria-expanded","false");this.isInMenuBar=opts.isInMenuBar;this.nestedMenus=$mdUtil.nodesToArray(menuContainer[0].querySelectorAll(".md-nested-menu"));menuContainer.on("$mdInterimElementRemove",function(){self.isOpen=false;$mdUtil.nextTick(function(){self.onIsOpenChanged(self.isOpen)})});$mdUtil.nextTick(function(){self.onIsOpenChanged(self.isOpen)});var menuContainerId="menu_container_"+$mdUtil.nextUid();menuContainer.attr("id",menuContainerId);angular.element(triggerElement).attr({"aria-owns":menuContainerId,"aria-haspopup":"true"});$scope.$on("$destroy",angular.bind(this,function(){this.disableHoverListener();$mdMenu.destroy()}));menuContainer.on("$destroy",function(){$mdMenu.destroy()})};var openMenuTimeout,menuItems,deregisterScopeListeners=[];this.enableHoverListener=function(){deregisterScopeListeners.push($rootScope.$on("$mdMenuOpen",function(event,el){if(menuContainer[0].contains(el[0])){self.currentlyOpenMenu=el.controller("mdMenu");self.isAlreadyOpening=false;self.currentlyOpenMenu.registerContainerProxy(self.triggerContainerProxy.bind(self))}}));deregisterScopeListeners.push($rootScope.$on("$mdMenuClose",function(event,el){if(menuContainer[0].contains(el[0])){self.currentlyOpenMenu=undefined}}));menuItems=angular.element($mdUtil.nodesToArray(menuContainer[0].children[0].children));menuItems.on("mouseenter",self.handleMenuItemHover);menuItems.on("mouseleave",self.handleMenuItemMouseLeave)};this.disableHoverListener=function(){while(deregisterScopeListeners.length){deregisterScopeListeners.shift()()}menuItems&&menuItems.off("mouseenter",self.handleMenuItemHover);menuItems&&menuItems.off("mouseleave",self.handleMenuItemMouseLeave)};this.handleMenuItemHover=function(event){if(self.isAlreadyOpening)return;var nestedMenu=event.target.querySelector("md-menu")||$mdUtil.getClosest(event.target,"MD-MENU");openMenuTimeout=$timeout(function(){if(nestedMenu){nestedMenu=angular.element(nestedMenu).controller("mdMenu")}if(self.currentlyOpenMenu&&self.currentlyOpenMenu!=nestedMenu){var closeTo=self.nestLevel+1;self.currentlyOpenMenu.close(true,{closeTo:closeTo});self.isAlreadyOpening=!!nestedMenu;nestedMenu&&nestedMenu.open()}else if(nestedMenu&&!nestedMenu.isOpen&&nestedMenu.open){self.isAlreadyOpening=!!nestedMenu;nestedMenu&&nestedMenu.open()}},nestedMenu?100:250);var focusableTarget=event.currentTarget.querySelector(".md-button:not([disabled])");focusableTarget&&focusableTarget.focus()};this.handleMenuItemMouseLeave=function(){if(openMenuTimeout){$timeout.cancel(openMenuTimeout);openMenuTimeout=undefined}};this.open=function openMenu(ev){ev&&ev.stopPropagation();ev&&ev.preventDefault();if(self.isOpen)return;self.enableHoverListener();self.isOpen=true;$mdUtil.nextTick(function(){self.onIsOpenChanged(self.isOpen)});triggerElement=triggerElement||(ev?ev.target:$element[0]);triggerElement.setAttribute("aria-expanded","true");$scope.$emit("$mdMenuOpen",$element);$mdMenu.show({scope:$scope,mdMenuCtrl:self,nestLevel:self.nestLevel,element:menuContainer,target:triggerElement,preserveElement:true,parent:"body"}).finally(function(){triggerElement.setAttribute("aria-expanded","false");self.disableHoverListener()})};$scope.$mdOpenMenu=this.open;this.onIsOpenChanged=function(isOpen){if(isOpen){menuContainer.attr("aria-hidden","false");$element[0].classList.add("md-open");angular.forEach(self.nestedMenus,function(el){el.classList.remove("md-open")})}else{menuContainer.attr("aria-hidden","true");$element[0].classList.remove("md-open")}$scope.$mdMenuIsOpen=self.isOpen};this.focusMenuContainer=function focusMenuContainer(){var focusTarget=menuContainer[0].querySelector(prefixer.buildSelector(["md-menu-focus-target","md-autofocus"]));if(!focusTarget)focusTarget=menuContainer[0].querySelector(".md-button");focusTarget.focus()};this.registerContainerProxy=function registerContainerProxy(handler){this.containerProxy=handler};this.triggerContainerProxy=function triggerContainerProxy(ev){this.containerProxy&&this.containerProxy(ev)};this.destroy=function(){return self.isOpen?$mdMenu.destroy():$q.when(false)};this.close=function closeMenu(skipFocus,closeOpts){if(!self.isOpen)return;self.isOpen=false;$mdUtil.nextTick(function(){self.onIsOpenChanged(self.isOpen)});var eventDetails=angular.extend({},closeOpts,{skipFocus:skipFocus});$scope.$emit("$mdMenuClose",$element,eventDetails);$mdMenu.hide(null,closeOpts);if(!skipFocus){var el=self.restoreFocusTo||$element.find("button")[0];if(el instanceof angular.element)el=el[0];if(el)el.focus()}};this.positionMode=function positionMode(){var attachment=($attrs.mdPositionMode||"target").split(" ");if(attachment.length==1){attachment.push(attachment[0])}return{left:attachment[0],top:attachment[1]}};this.offsets=function offsets(){var position=($attrs.mdOffset||"0 0").split(" ").map(parseFloat);if(position.length==2){return{left:position[0],top:position[1]}}else if(position.length==1){return{top:position[0],left:position[0]}}else{throw Error("Invalid offsets specified. Please follow format <x, y> or <n>")}}}MenuDirective.$inject=["$mdUtil"];angular.module("material.components.menu").directive("mdMenu",MenuDirective);function MenuDirective($mdUtil){var INVALID_PREFIX="Invalid HTML for md-menu: ";return{restrict:"E",require:["mdMenu","?^mdMenuBar"],controller:"mdMenuCtrl",scope:true,compile:compile};function compile(templateElement){templateElement.addClass("md-menu");var triggerElement=templateElement.children()[0];var prefixer=$mdUtil.prefixer();if(!prefixer.hasAttribute(triggerElement,"ng-click")){triggerElement=triggerElement.querySelector(prefixer.buildSelector(["ng-click","ng-mouseenter"]))||triggerElement}if(triggerElement&&(triggerElement.nodeName=="MD-BUTTON"||triggerElement.nodeName=="BUTTON")&&!triggerElement.hasAttribute("type")){triggerElement.setAttribute("type","button")}if(templateElement.children().length!=2){throw Error(INVALID_PREFIX+"Expected two children elements.")}triggerElement&&triggerElement.setAttribute("aria-haspopup","true");var nestedMenus=templateElement[0].querySelectorAll("md-menu");var nestingDepth=parseInt(templateElement[0].getAttribute("md-nest-level"),10)||0;if(nestedMenus){angular.forEach($mdUtil.nodesToArray(nestedMenus),function(menuEl){if(!menuEl.hasAttribute("md-position-mode")){menuEl.setAttribute("md-position-mode","cascade")}menuEl.classList.add("_md-nested-menu");menuEl.setAttribute("md-nest-level",nestingDepth+1)})}return link}function link(scope,element,attr,ctrls){var mdMenuCtrl=ctrls[0];var isInMenuBar=ctrls[1]!=undefined;var menuContainer=angular.element('<div class="_md md-open-menu-container md-whiteframe-z2"></div>');var menuContents=element.children()[1];element.addClass("_md");if(!menuContents.hasAttribute("role")){menuContents.setAttribute("role","menu")}menuContainer.append(menuContents);element.on("$destroy",function(){menuContainer.remove()});element.append(menuContainer);menuContainer[0].style.display="none";mdMenuCtrl.init(menuContainer,{isInMenuBar:isInMenuBar})}}MenuProvider.$inject=["$$interimElementProvider"];angular.module("material.components.menu").provider("$mdMenu",MenuProvider);function MenuProvider($$interimElementProvider){menuDefaultOptions.$inject=["$mdUtil","$mdTheming","$mdConstant","$document","$window","$q","$$rAF","$animateCss","$animate"];var MENU_EDGE_MARGIN=8;return $$interimElementProvider("$mdMenu").setDefaults({methods:["target"],options:menuDefaultOptions});function menuDefaultOptions($mdUtil,$mdTheming,$mdConstant,$document,$window,$q,$$rAF,$animateCss,$animate){var prefixer=$mdUtil.prefixer();var animator=$mdUtil.dom.animator;return{parent:"body",onShow:onShow,onRemove:onRemove,hasBackdrop:true,disableParentScroll:true,skipCompile:true,preserveScope:true,skipHide:true,themable:true};function showBackdrop(scope,element,options){if(options.nestLevel)return angular.noop;if(options.disableParentScroll&&!$mdUtil.getClosest(options.target,"MD-DIALOG")){options.restoreScroll=$mdUtil.disableScrollAround(options.element,options.parent)}else{options.disableParentScroll=false}if(options.hasBackdrop){options.backdrop=$mdUtil.createBackdrop(scope,"md-menu-backdrop md-click-catcher");$animate.enter(options.backdrop,$document[0].body)}return function hideBackdrop(){if(options.backdrop)options.backdrop.remove();if(options.disableParentScroll)options.restoreScroll()}}function onRemove(scope,element,opts){opts.cleanupInteraction&&opts.cleanupInteraction();opts.cleanupResizing();opts.hideBackdrop();return opts.$destroy===true?detachAndClean():animateRemoval().then(detachAndClean);function animateRemoval(){return $animateCss(element,{addClass:"md-leave"}).start()}function detachAndClean(){element.removeClass("md-active");detachElement(element,opts);opts.alreadyOpen=false}}function onShow(scope,element,opts){sanitizeAndConfigure(opts);$mdTheming.inherit(opts.menuContentEl,opts.target);opts.cleanupResizing=startRepositioningOnResize();opts.hideBackdrop=showBackdrop(scope,element,opts);return showMenu().then(function(response){opts.alreadyOpen=true;opts.cleanupInteraction=activateInteraction();return response});function showMenu(){opts.parent.append(element);element[0].style.display="";return $q(function(resolve){var position=calculateMenuPosition(element,opts);element.removeClass("md-leave");$animateCss(element,{addClass:"md-active",from:animator.toCss(position),to:animator.toCss({transform:""})}).start().then(resolve)})}function sanitizeAndConfigure(){if(!opts.target){throw Error("$mdMenu.show() expected a target to animate from in options.target")}angular.extend(opts,{alreadyOpen:false,isRemoved:false,target:angular.element(opts.target),parent:angular.element(opts.parent),menuContentEl:angular.element(element[0].querySelector("md-menu-content"))})}function startRepositioningOnResize(){var repositionMenu=function(target,options){return $$rAF.throttle(function(){if(opts.isRemoved)return;var position=calculateMenuPosition(target,options);target.css(animator.toCss(position))})}(element,opts);$window.addEventListener("resize",repositionMenu);$window.addEventListener("orientationchange",repositionMenu);return function stopRepositioningOnResize(){$window.removeEventListener("resize",repositionMenu);$window.removeEventListener("orientationchange",repositionMenu)}}function activateInteraction(){element.addClass("md-clickable");if(opts.backdrop)opts.backdrop.on("click",onBackdropClick);opts.menuContentEl.on("keydown",onMenuKeyDown);opts.menuContentEl[0].addEventListener("click",captureClickListener,true);var focusTarget=opts.menuContentEl[0].querySelector(prefixer.buildSelector(["md-menu-focus-target","md-autofocus"]));if(!focusTarget){var firstChild=opts.menuContentEl[0].firstElementChild;focusTarget=firstChild&&(firstChild.querySelector(".md-button:not([disabled])")||firstChild.firstElementChild)}focusTarget&&focusTarget.focus();return function cleanupInteraction(){element.removeClass("md-clickable");if(opts.backdrop)opts.backdrop.off("click",onBackdropClick);opts.menuContentEl.off("keydown",onMenuKeyDown);opts.menuContentEl[0].removeEventListener("click",captureClickListener,true)};function onMenuKeyDown(ev){var handled;switch(ev.keyCode){case $mdConstant.KEY_CODE.ESCAPE:opts.mdMenuCtrl.close(false,{closeAll:true});handled=true;break;case $mdConstant.KEY_CODE.UP_ARROW:if(!focusMenuItem(ev,opts.menuContentEl,opts,-1)&&!opts.nestLevel){opts.mdMenuCtrl.triggerContainerProxy(ev)}handled=true;break;case $mdConstant.KEY_CODE.DOWN_ARROW:if(!focusMenuItem(ev,opts.menuContentEl,opts,1)&&!opts.nestLevel){opts.mdMenuCtrl.triggerContainerProxy(ev)}handled=true;break;case $mdConstant.KEY_CODE.LEFT_ARROW:if(opts.nestLevel){opts.mdMenuCtrl.close()}else{opts.mdMenuCtrl.triggerContainerProxy(ev)}handled=true;break;case $mdConstant.KEY_CODE.RIGHT_ARROW:var parentMenu=$mdUtil.getClosest(ev.target,"MD-MENU");if(parentMenu&&parentMenu!=opts.parent[0]){ev.target.click()}else{opts.mdMenuCtrl.triggerContainerProxy(ev)}handled=true;break}if(handled){ev.preventDefault();ev.stopImmediatePropagation()}}function onBackdropClick(e){e.preventDefault();e.stopPropagation();scope.$apply(function(){opts.mdMenuCtrl.close(true,{closeAll:true})})}function captureClickListener(e){var target=e.target;do{if(target==opts.menuContentEl[0])return;if((hasAnyAttribute(target,["ng-click","ng-href","ui-sref"])||target.nodeName=="BUTTON"||target.nodeName=="MD-BUTTON")&&!hasAnyAttribute(target,["md-prevent-menu-close"])){var closestMenu=$mdUtil.getClosest(target,"MD-MENU");if(!target.hasAttribute("disabled")&&(!closestMenu||closestMenu==opts.parent[0])){close()}break}}while(target=target.parentNode);function close(){scope.$apply(function(){opts.mdMenuCtrl.close(true,{closeAll:true})})}function hasAnyAttribute(target,attrs){if(!target)return false;for(var i=0,attr;attr=attrs[i];++i){if(prefixer.hasAttribute(target,attr)){return true}}return false}}}}function focusMenuItem(e,menuEl,opts,direction){var currentItem=$mdUtil.getClosest(e.target,"MD-MENU-ITEM");var items=$mdUtil.nodesToArray(menuEl[0].children);var currentIndex=items.indexOf(currentItem);var didFocus;for(var i=currentIndex+direction;i>=0&&i<items.length;i=i+direction){var focusTarget=items[i].querySelector(".md-button");didFocus=attemptFocus(focusTarget);if(didFocus){break}}return didFocus}function attemptFocus(el){if(el&&el.getAttribute("tabindex")!=-1){el.focus();return $document[0].activeElement==el}}function detachElement(element,opts){if(!opts.preserveElement){if(toNode(element).parentNode===toNode(opts.parent)){toNode(opts.parent).removeChild(toNode(element))}}else{toNode(element).style.display="none"}}function calculateMenuPosition(el,opts){var containerNode=el[0],openMenuNode=el[0].firstElementChild,openMenuNodeRect=openMenuNode.getBoundingClientRect(),boundryNode=$document[0].body,boundryNodeRect=boundryNode.getBoundingClientRect();var menuStyle=$window.getComputedStyle(openMenuNode);var originNode=opts.target[0].querySelector(prefixer.buildSelector("md-menu-origin"))||opts.target[0],originNodeRect=originNode.getBoundingClientRect();var bounds={left:boundryNodeRect.left+MENU_EDGE_MARGIN,top:Math.max(boundryNodeRect.top,0)+MENU_EDGE_MARGIN,bottom:Math.max(boundryNodeRect.bottom,Math.max(boundryNodeRect.top,0)+boundryNodeRect.height)-MENU_EDGE_MARGIN,right:boundryNodeRect.right-MENU_EDGE_MARGIN};var alignTarget,alignTargetRect={top:0,left:0,right:0,bottom:0},existingOffsets={top:0,left:0,right:0,bottom:0};var positionMode=opts.mdMenuCtrl.positionMode();if(positionMode.top=="target"||positionMode.left=="target"||positionMode.left=="target-right"){alignTarget=firstVisibleChild();if(alignTarget){alignTarget=alignTarget.firstElementChild||alignTarget;alignTarget=alignTarget.querySelector(prefixer.buildSelector("md-menu-align-target"))||alignTarget;alignTargetRect=alignTarget.getBoundingClientRect();existingOffsets={top:parseFloat(containerNode.style.top||0),left:parseFloat(containerNode.style.left||0)}}}var position={};var transformOrigin="top ";switch(positionMode.top){case"target":position.top=existingOffsets.top+originNodeRect.top-alignTargetRect.top;break;case"cascade":position.top=originNodeRect.top-parseFloat(menuStyle.paddingTop)-originNode.style.top;break;case"bottom":position.top=originNodeRect.top+originNodeRect.height;break;default:throw new Error('Invalid target mode "'+positionMode.top+'" specified for md-menu on Y axis.')}var rtl=$mdUtil.bidi()=="rtl";switch(positionMode.left){case"target":position.left=existingOffsets.left+originNodeRect.left-alignTargetRect.left;transformOrigin+=rtl?"right":"left";break;case"target-left":position.left=originNodeRect.left;transformOrigin+="left";break;case"target-right":position.left=originNodeRect.right-openMenuNodeRect.width+(openMenuNodeRect.right-alignTargetRect.right);transformOrigin+="right";break;case"cascade":var willFitRight=rtl?originNodeRect.left-openMenuNodeRect.width<bounds.left:originNodeRect.right+openMenuNodeRect.width<bounds.right;position.left=willFitRight?originNodeRect.right-originNode.style.left:originNodeRect.left-originNode.style.left-openMenuNodeRect.width;transformOrigin+=willFitRight?"left":"right";break;case"right":if(rtl){position.left=originNodeRect.right-originNodeRect.width;transformOrigin+="left"}else{position.left=originNodeRect.right-openMenuNodeRect.width;transformOrigin+="right"}break;case"left":if(rtl){position.left=originNodeRect.right-openMenuNodeRect.width;transformOrigin+="right"}else{position.left=originNodeRect.left;transformOrigin+="left"}break;default:throw new Error('Invalid target mode "'+positionMode.left+'" specified for md-menu on X axis.')}var offsets=opts.mdMenuCtrl.offsets();position.top+=offsets.top;position.left+=offsets.left;clamp(position);var scaleX=Math.round(100*Math.min(originNodeRect.width/containerNode.offsetWidth,1))/100;var scaleY=Math.round(100*Math.min(originNodeRect.height/containerNode.offsetHeight,1))/100;return{top:Math.round(position.top),left:Math.round(position.left),transform:!opts.alreadyOpen?$mdUtil.supplant("scale({0},{1})",[scaleX,scaleY]):undefined,transformOrigin:transformOrigin};function clamp(pos){pos.top=Math.max(Math.min(pos.top,bounds.bottom-containerNode.offsetHeight),bounds.top);pos.left=Math.max(Math.min(pos.left,bounds.right-containerNode.offsetWidth),bounds.left)}function firstVisibleChild(){for(var i=0;i<openMenuNode.children.length;++i){if($window.getComputedStyle(openMenuNode.children[i]).display!="none"){return openMenuNode.children[i]}}}}}function toNode(el){if(el instanceof angular.element){el=el[0]}return el}}})(window,window.angular);