(function(window,angular,undefined){"use strict";SliderDirective.$inject=["$$rAF","$window","$mdAria","$mdUtil","$mdConstant","$mdTheming","$mdGesture","$parse","$log","$timeout"];angular.module("material.components.slider",["material.core"]).directive("mdSlider",SliderDirective).directive("mdSliderContainer",SliderContainerDirective);function SliderContainerDirective(){return{controller:function(){},compile:function(elem){var slider=elem.find("md-slider");if(!slider){return}var vertical=slider.attr("md-vertical");if(vertical!==undefined){elem.attr("md-vertical","")}if(!slider.attr("flex")){slider.attr("flex","")}return function postLink(scope,element,attr,ctrl){element.addClass("_md");function setDisable(value){element.children().attr("disabled",value);element.find("input").attr("disabled",value)}var stopDisabledWatch=angular.noop;if(attr.disabled){setDisable(true)}else if(attr.ngDisabled){stopDisabledWatch=scope.$watch(attr.ngDisabled,function(value){setDisable(value)})}scope.$on("$destroy",function(){stopDisabledWatch()});var initialMaxWidth;ctrl.fitInputWidthToTextLength=function(length){var input=element[0].querySelector("md-input-container");if(input){var computedStyle=getComputedStyle(input);var minWidth=parseInt(computedStyle.minWidth);var padding=parseInt(computedStyle.padding)*2;initialMaxWidth=initialMaxWidth||parseInt(computedStyle.maxWidth);var newMaxWidth=Math.max(initialMaxWidth,minWidth+padding+minWidth/2*length);input.style.maxWidth=newMaxWidth+"px"}}}}}}function SliderDirective($$rAF,$window,$mdAria,$mdUtil,$mdConstant,$mdTheming,$mdGesture,$parse,$log,$timeout){return{scope:{},require:["?ngModel","?^mdSliderContainer"],template:'<div class="md-slider-wrapper">'+'<div class="md-slider-content">'+'<div class="md-track-container">'+'<div class="md-track"></div>'+'<div class="md-track md-track-fill"></div>'+'<div class="md-track-ticks"></div>'+"</div>"+'<div class="md-thumb-container">'+'<div class="md-thumb"></div>'+'<div class="md-focus-thumb"></div>'+'<div class="md-focus-ring"></div>'+'<div class="md-sign">'+'<span class="md-thumb-text"></span>'+"</div>"+'<div class="md-disabled-thumb"></div>'+"</div>"+"</div>"+"</div>",compile:compile};function compile(tElement,tAttrs){var wrapper=angular.element(tElement[0].getElementsByClassName("md-slider-wrapper"));var tabIndex=tAttrs.tabindex||0;wrapper.attr("tabindex",tabIndex);if(tAttrs.disabled||tAttrs.ngDisabled)wrapper.attr("tabindex",-1);wrapper.attr("role","slider");$mdAria.expect(tElement,"aria-label");return postLink}function postLink(scope,element,attr,ctrls){$mdTheming(element);var ngModelCtrl=ctrls[0]||{$setViewValue:function(val){this.$viewValue=val;this.$viewChangeListeners.forEach(function(cb){cb()})},$parsers:[],$formatters:[],$viewChangeListeners:[]};var containerCtrl=ctrls[1];var container=angular.element($mdUtil.getClosest(element,"_md-slider-container",true));var isDisabled=attr.ngDisabled?angular.bind(null,$parse(attr.ngDisabled),scope.$parent):function(){return element[0].hasAttribute("disabled")};var thumb=angular.element(element[0].querySelector(".md-thumb"));var thumbText=angular.element(element[0].querySelector(".md-thumb-text"));var thumbContainer=thumb.parent();var trackContainer=angular.element(element[0].querySelector(".md-track-container"));var activeTrack=angular.element(element[0].querySelector(".md-track-fill"));var tickContainer=angular.element(element[0].querySelector(".md-track-ticks"));var wrapper=angular.element(element[0].getElementsByClassName("md-slider-wrapper"));var content=angular.element(element[0].getElementsByClassName("md-slider-content"));var throttledRefreshDimensions=$mdUtil.throttle(refreshSliderDimensions,5e3);var DEFAULT_ROUND=3;var vertical=angular.isDefined(attr.mdVertical);var discrete=angular.isDefined(attr.mdDiscrete);var invert=angular.isDefined(attr.mdInvert);angular.isDefined(attr.min)?attr.$observe("min",updateMin):updateMin(0);angular.isDefined(attr.max)?attr.$observe("max",updateMax):updateMax(100);angular.isDefined(attr.step)?attr.$observe("step",updateStep):updateStep(1);angular.isDefined(attr.round)?attr.$observe("round",updateRound):updateRound(DEFAULT_ROUND);var stopDisabledWatch=angular.noop;if(attr.ngDisabled){stopDisabledWatch=scope.$parent.$watch(attr.ngDisabled,updateAriaDisabled)}$mdGesture.register(wrapper,"drag",{horizontal:!vertical});scope.mouseActive=false;wrapper.on("keydown",keydownListener).on("mousedown",mouseDownListener).on("focus",focusListener).on("blur",blurListener).on("$md.pressdown",onPressDown).on("$md.pressup",onPressUp).on("$md.dragstart",onDragStart).on("$md.drag",onDrag).on("$md.dragend",onDragEnd);function updateAll(){refreshSliderDimensions();ngModelRender()}setTimeout(updateAll,0);var debouncedUpdateAll=$$rAF.throttle(updateAll);angular.element($window).on("resize",debouncedUpdateAll);scope.$on("$destroy",function(){angular.element($window).off("resize",debouncedUpdateAll)});ngModelCtrl.$render=ngModelRender;ngModelCtrl.$viewChangeListeners.push(ngModelRender);ngModelCtrl.$formatters.push(minMaxValidator);ngModelCtrl.$formatters.push(stepValidator);var min;var max;var step;var round;function updateMin(value){min=parseFloat(value);element.attr("aria-valuemin",value);updateAll()}function updateMax(value){max=parseFloat(value);element.attr("aria-valuemax",value);updateAll()}function updateStep(value){step=parseFloat(value)}function updateRound(value){round=minMaxValidator(parseInt(value),0,6)}function updateAriaDisabled(){element.attr("aria-disabled",!!isDisabled())}var tickCanvas,tickCtx;function redrawTicks(){if(!discrete||isDisabled())return;if(angular.isUndefined(step))return;if(step<=0){var msg="Slider step value must be greater than zero when in discrete mode";$log.error(msg);throw new Error(msg)}var numSteps=Math.floor((max-min)/step);if(!tickCanvas){tickCanvas=angular.element("<canvas>").css("position","absolute");tickContainer.append(tickCanvas);tickCtx=tickCanvas[0].getContext("2d")}var dimensions=getSliderDimensions();if(dimensions&&!dimensions.height&&!dimensions.width){refreshSliderDimensions();dimensions=sliderDimensions}tickCanvas[0].width=dimensions.width;tickCanvas[0].height=dimensions.height;var distance;for(var i=0;i<=numSteps;i++){var trackTicksStyle=$window.getComputedStyle(tickContainer[0]);tickCtx.fillStyle=trackTicksStyle.color||"black";distance=Math.floor((vertical?dimensions.height:dimensions.width)*(i/numSteps));tickCtx.fillRect(vertical?0:distance-1,vertical?distance-1:0,vertical?dimensions.width:2,vertical?2:dimensions.height)}}function clearTicks(){if(tickCanvas&&tickCtx){var dimensions=getSliderDimensions();tickCtx.clearRect(0,0,dimensions.width,dimensions.height)}}var sliderDimensions={};refreshSliderDimensions();function refreshSliderDimensions(){sliderDimensions=trackContainer[0].getBoundingClientRect()}function getSliderDimensions(){throttledRefreshDimensions();return sliderDimensions}function keydownListener(ev){if(isDisabled())return;var changeAmount;if(vertical?ev.keyCode===$mdConstant.KEY_CODE.DOWN_ARROW:ev.keyCode===$mdConstant.KEY_CODE.LEFT_ARROW){changeAmount=-step}else if(vertical?ev.keyCode===$mdConstant.KEY_CODE.UP_ARROW:ev.keyCode===$mdConstant.KEY_CODE.RIGHT_ARROW){changeAmount=step}changeAmount=invert?-changeAmount:changeAmount;if(changeAmount){if(ev.metaKey||ev.ctrlKey||ev.altKey){changeAmount*=4}ev.preventDefault();ev.stopPropagation();scope.$evalAsync(function(){setModelValue(ngModelCtrl.$viewValue+changeAmount)})}}function mouseDownListener(){redrawTicks();scope.mouseActive=true;wrapper.removeClass("md-focused");$timeout(function(){scope.mouseActive=false},100)}function focusListener(){if(scope.mouseActive===false){wrapper.addClass("md-focused")}}function blurListener(){wrapper.removeClass("md-focused");element.removeClass("md-active");clearTicks()}function setModelValue(value){ngModelCtrl.$setViewValue(minMaxValidator(stepValidator(value)))}function ngModelRender(){if(isNaN(ngModelCtrl.$viewValue)){ngModelCtrl.$viewValue=ngModelCtrl.$modelValue}ngModelCtrl.$viewValue=minMaxValidator(ngModelCtrl.$viewValue);var percent=valueToPercent(ngModelCtrl.$viewValue);scope.modelValue=ngModelCtrl.$viewValue;element.attr("aria-valuenow",ngModelCtrl.$viewValue);setSliderPercent(percent);thumbText.text(ngModelCtrl.$viewValue)}function minMaxValidator(value,minValue,maxValue){if(angular.isNumber(value)){minValue=angular.isNumber(minValue)?minValue:min;maxValue=angular.isNumber(maxValue)?maxValue:max;return Math.max(minValue,Math.min(maxValue,value))}}function stepValidator(value){if(angular.isNumber(value)){var formattedValue=Math.round((value-min)/step)*step+min;formattedValue=Math.round(formattedValue*Math.pow(10,round))/Math.pow(10,round);if(containerCtrl&&containerCtrl.fitInputWidthToTextLength){$mdUtil.debounce(function(){containerCtrl.fitInputWidthToTextLength(formattedValue.toString().length)},100)()}return formattedValue}}function setSliderPercent(percent){percent=clamp(percent);var thumbPosition=percent*100+"%";var activeTrackPercent=invert?(1-percent)*100+"%":thumbPosition;if(vertical){thumbContainer.css("bottom",thumbPosition)}else{$mdUtil.bidiProperty(thumbContainer,"left","right",thumbPosition)}activeTrack.css(vertical?"height":"width",activeTrackPercent);element.toggleClass(invert?"md-max":"md-min",percent===0);element.toggleClass(invert?"md-min":"md-max",percent===1)}var isDragging=false;function onPressDown(ev){if(isDisabled())return;element.addClass("md-active");element[0].focus();refreshSliderDimensions();var exactVal=percentToValue(positionToPercent(vertical?ev.pointer.y:ev.pointer.x));var closestVal=minMaxValidator(stepValidator(exactVal));scope.$apply(function(){setModelValue(closestVal);setSliderPercent(valueToPercent(closestVal))})}function onPressUp(ev){if(isDisabled())return;element.removeClass("md-dragging");var exactVal=percentToValue(positionToPercent(vertical?ev.pointer.y:ev.pointer.x));var closestVal=minMaxValidator(stepValidator(exactVal));scope.$apply(function(){setModelValue(closestVal);ngModelRender()})}function onDragStart(ev){if(isDisabled())return;isDragging=true;ev.stopPropagation();element.addClass("md-dragging");setSliderFromEvent(ev)}function onDrag(ev){if(!isDragging)return;ev.stopPropagation();setSliderFromEvent(ev)}function onDragEnd(ev){if(!isDragging)return;ev.stopPropagation();isDragging=false}function setSliderFromEvent(ev){if(discrete)adjustThumbPosition(vertical?ev.pointer.y:ev.pointer.x);else doSlide(vertical?ev.pointer.y:ev.pointer.x)}function doSlide(x){scope.$evalAsync(function(){setModelValue(percentToValue(positionToPercent(x)))})}function adjustThumbPosition(x){var exactVal=percentToValue(positionToPercent(x));var closestVal=minMaxValidator(stepValidator(exactVal));setSliderPercent(positionToPercent(x));thumbText.text(closestVal)}function clamp(value){return Math.max(0,Math.min(value||0,1))}function positionToPercent(position){var offset=vertical?sliderDimensions.top:sliderDimensions.left;var size=vertical?sliderDimensions.height:sliderDimensions.width;var calc=(position-offset)/size;if(!vertical&&$mdUtil.bidi()==="rtl"){calc=1-calc}return Math.max(0,Math.min(1,vertical?1-calc:calc))}function percentToValue(percent){var adjustedPercent=invert?1-percent:percent;return min+adjustedPercent*(max-min)}function valueToPercent(val){var percent=(val-min)/(max-min);return invert?1-percent:percent}}}})(window,window.angular);